//Main.cpp
#include<iostream>
#include<cstdlib>
using std::cin;
using std::cout;
using std::endl;
using std::string;
template<class T>

class Stack
{
     //fill the code
     private:
        int size;
        int top;
        T *elements;
    public:
        Stack(int s) {
            size = s;
            top = -1;
            elements = new T[size];
        }
        ~Stack() {
            delete[] elements;
        }
        void push(T item) {
            top++;
            elements[top] = item;
            cout << "Inserting " << item << endl;
        }
        void pop() {
            cout << "Removing " << elements[top] << endl;
            top--;
        }
        void display() {
            for (int i = 0; i<=top; i++) {
                cout << " "<< elements[i] ;
            }
            cout << endl;
        }
        bool isEmpty() {
            return (top == -1);
        }
        bool isFull() {
            return (top == size - 1);
        }
};

int main()
{
    int s,n;
    string item;
    cin>>s;
     Stack<string>st(s);
    do
    {
    cout<<"1.Insertion"<<endl;
    cout<<"2.Deletion"<<endl;
    cout<<"3.Display Stack"<<endl;
    cout<<"4.Exit"<<endl;
    cout<<"Enter your Choice:"<<endl<<endl;
    cin>>n;
    if(n==1)
    {
        cin.get();
        cout<<"Enter the element to insert : "<<endl;
        getline(cin,item);
        if(!st.isFull())
        {
        st.push(item);
        }
        else
        cout<<"Stack is full!"<<endl;
        cout<<"\n";
    }
    else if(n==2)
    {
        if(!st.isEmpty())
        { 
        st.pop();
        }
        else
        cout<<"Stack is empty!"<<endl;
        cout<<"\n";
    }
    else if(n==3)
    {
      if(!st.isEmpty())
        {
        cout<<"Stack elements are : ";
        st.display();
        }
        else
        cout<<"Stack is empty!"<<endl;
    }
    else if (n==4)
    {
        exit(0);
    }
    }while(n>=1&&n<5);
    return 0;
}
